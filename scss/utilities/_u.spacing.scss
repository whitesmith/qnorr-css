////
/// @group Utilities
/// @author Whitesmith
////


/* stylelint-disable string-quotes */
$qnorr-spacers-breakpoints-list: $qnorr-grid-breakpoints-list !default;
$qnorr-spacers-breakpoint-separator: $qnorr-breakpoint-separator !default;

///
/// map alias to property-direction
/// @type Map
$qnorr-spacing-directions: (
  null: null,
  't': '-top',
  'r': '-right',
  'b': '-bottom',
  'l': '-left',
  'h': '-left' '-right',
  'v': '-top' '-bottom',
) !default;

///
/// map alias to property-name
/// @type Map
$qnorr-spacing-properties: (
  'p': 'padding',
  'm': 'margin',
) !default;

///
/// map alias to size suffix
/// @type Map
$qnorr-spacing-sizes: (
  null: $qnorr-pixel-grid-unit,
  '-2x': $qnorr-pixel-grid-unit*2,
  '-3x': $qnorr-pixel-grid-unit*3,
  '-4x': $qnorr-pixel-grid-unit*4,
  '-5x': $qnorr-pixel-grid-unit*5,
  '-6x': $qnorr-pixel-grid-unit*6,
  '-7x': $qnorr-pixel-grid-unit*7,
  '-8x': $qnorr-pixel-grid-unit*8,
  '-9x': $qnorr-pixel-grid-unit*9,
  '-10x': $qnorr-pixel-grid-unit*10,
  '-12x': $qnorr-pixel-grid-unit*12,
  '-14x': $qnorr-pixel-grid-unit*14,
  '-0': 0
) !default;


///
/// Generates a utility class per property + direction + size + breakpont
///
/// **Properties**:
///
/// - p : padding
/// - m : margin
///
/// **Directions:**
/// - t : top
/// - b : bottom
/// - l : left
/// - r : right
/// - h : horizontal (left and right)
/// - v : vertical (top and bottom)
///
/// **Size:**
/// - {n}x - pixel-grid multplier
/// - 0 - reset spacer to zero
/// @param {String|null} $breakpoint - If apply responsive suffixÂ or not
///
/// @example scss - Anatomy
///   .u-[propertynamespace][direction]-[size][breakpoint-separator] {}
///
/// @example markup
///   <div class="u-pb-0x"></div>
///   <div class="u-mt-2x@lg"></div>
///
///
@mixin qnorr-spacers($breakpoint: null) {
  @each $property-namespace, $property in $qnorr-spacing-properties {
    @each $direction-namespace, $direction-rules in $qnorr-spacing-directions {
      @each $size-namespace, $size in $qnorr-spacing-sizes {
        @if ($breakpoint == null) {
          .u-#{$property-namespace}#{$direction-namespace}#{$size-namespace} {
            @each $direction in $direction-rules {
              #{$property}#{$direction}: $size !important;
            }
          }
        }
        @else {
          .u-#{$property-namespace}#{$direction-namespace}#{$size-namespace}#{$qnorr-spacers-breakpoint-separator}#{$breakpoint} {
            @each $direction in $direction-rules {
              #{$property}#{$direction}: $size !important;
            }
          }
        }
      }
    }
  }
}

// With Responsive Suffixes
// use uncss to remove unused properties
// One media query per breakpoint wraps all properties inside
@include qnorr-spacers;

@each $breakpoint-name in $qnorr-spacers-breakpoints-list {
  @include mappy-bp($breakpoint-name) {
    @include qnorr-spacers($breakpoint-name);
  }
}
